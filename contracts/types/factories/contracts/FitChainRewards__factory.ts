/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  FitChainRewards,
  FitChainRewardsInterface,
} from "../../contracts/FitChainRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_etnToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "steps",
        type: "uint256",
      },
    ],
    name: "StepsRecorded",
    type: "event",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimedSteps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "etnToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fundContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPotentialReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUnclaimedSteps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "steps",
        type: "uint256",
      },
    ],
    name: "recordSteps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSteps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516110e13803806110e18339818101604052810190610032919061011c565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b610f89806101586000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639e1d264e116100665780639e1d264e14610135578063a1779d6414610165578063a421096c14610181578063aaab890b146101b1578063f16912af146101cf5761009e565b8063185ebe15146100a35780633519a2f8146100d3578063372500ab146100ef5780636f9fb98a146100f95780638da5cb5b14610117575b600080fd5b6100bd60048036038101906100b89190610a14565b6101ff565b6040516100ca9190610a5a565b60405180910390f35b6100ed60048036038101906100e89190610aa1565b6102aa565b005b6100f761038e565b005b6101016106cb565b60405161010e9190610a5a565b60405180910390f35b61011f61076e565b60405161012c9190610add565b60405180910390f35b61014f600480360381019061014a9190610a14565b610792565b60405161015c9190610a5a565b60405180910390f35b61017f600480360381019061017a9190610af8565b6107aa565b005b61019b60048036038101906101969190610a14565b6108e0565b6040516101a89190610a5a565b60405180910390f35b6101b96108f8565b6040516101c69190610b97565b60405180910390f35b6101e960048036038101906101e49190610a14565b61091e565b6040516101f69190610a5a565b60405180910390f35b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461028c9190610be1565b9050670de0b6b3a7640000816102a29190610c15565b915050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161030993929190610c57565b6020604051808303816000875af1158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c9190610cc6565b61038b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038290610d50565b60405180910390fd5b50565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461041a9190610be1565b90506000811161045f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045690610dbc565b60405180910390fd5b6000670de0b6b3a7640000826104759190610c15565b9050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105569190610add565b602060405180830381865afa158015610573573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105979190610df1565b10156105d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cf90610e6a565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610635929190610e8a565b6020604051808303816000875af1158015610654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106789190610cc6565b503373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516106bf9190610a5a565b60405180910390a25050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107289190610add565b602060405180830381865afa158015610745573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107699190610df1565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082f90610eff565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108879190610f1f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f1b6b1ae5afb559f81105b072a65269f0357cf77abdea3642e7317c5cc0efa3b9826040516108d49190610a5a565b60405180910390a25050565b60026020528060005260406000206000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109aa9190610be1565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109e1826109b6565b9050919050565b6109f1816109d6565b81146109fc57600080fd5b50565b600081359050610a0e816109e8565b92915050565b600060208284031215610a2a57610a296109b1565b5b6000610a38848285016109ff565b91505092915050565b6000819050919050565b610a5481610a41565b82525050565b6000602082019050610a6f6000830184610a4b565b92915050565b610a7e81610a41565b8114610a8957600080fd5b50565b600081359050610a9b81610a75565b92915050565b600060208284031215610ab757610ab66109b1565b5b6000610ac584828501610a8c565b91505092915050565b610ad7816109d6565b82525050565b6000602082019050610af26000830184610ace565b92915050565b60008060408385031215610b0f57610b0e6109b1565b5b6000610b1d858286016109ff565b9250506020610b2e85828601610a8c565b9150509250929050565b6000819050919050565b6000610b5d610b58610b53846109b6565b610b38565b6109b6565b9050919050565b6000610b6f82610b42565b9050919050565b6000610b8182610b64565b9050919050565b610b9181610b76565b82525050565b6000602082019050610bac6000830184610b88565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bec82610a41565b9150610bf783610a41565b9250828203905081811115610c0f57610c0e610bb2565b5b92915050565b6000610c2082610a41565b9150610c2b83610a41565b9250828202610c3981610a41565b91508282048414831517610c5057610c4f610bb2565b5b5092915050565b6000606082019050610c6c6000830186610ace565b610c796020830185610ace565b610c866040830184610a4b565b949350505050565b60008115159050919050565b610ca381610c8e565b8114610cae57600080fd5b50565b600081519050610cc081610c9a565b92915050565b600060208284031215610cdc57610cdb6109b1565b5b6000610cea84828501610cb1565b91505092915050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610d3a600f83610cf3565b9150610d4582610d04565b602082019050919050565b60006020820190508181036000830152610d6981610d2d565b9050919050565b7f4e6f20737465707320746f20636c61696d000000000000000000000000000000600082015250565b6000610da6601183610cf3565b9150610db182610d70565b602082019050919050565b60006020820190508181036000830152610dd581610d99565b9050919050565b600081519050610deb81610a75565b92915050565b600060208284031215610e0757610e066109b1565b5b6000610e1584828501610ddc565b91505092915050565b7f496e73756666696369656e7420636f6e74726163742062616c616e6365000000600082015250565b6000610e54601d83610cf3565b9150610e5f82610e1e565b602082019050919050565b60006020820190508181036000830152610e8381610e47565b9050919050565b6000604082019050610e9f6000830185610ace565b610eac6020830184610a4b565b9392505050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b6000610ee9600c83610cf3565b9150610ef482610eb3565b602082019050919050565b60006020820190508181036000830152610f1881610edc565b9050919050565b6000610f2a82610a41565b9150610f3583610a41565b9250828201905080821115610f4d57610f4c610bb2565b5b9291505056fea2646970667358221220c6269706ffd4f9e19dbf93d15d8ac38c22958cb04e6f1da433869b4ee348bd7e64736f6c634300081c0033";

type FitChainRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FitChainRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FitChainRewards__factory extends ContractFactory {
  constructor(...args: FitChainRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _etnToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_etnToken, overrides || {});
  }
  override deploy(
    _etnToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_etnToken, overrides || {}) as Promise<
      FitChainRewards & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FitChainRewards__factory {
    return super.connect(runner) as FitChainRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FitChainRewardsInterface {
    return new Interface(_abi) as FitChainRewardsInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FitChainRewards {
    return new Contract(address, _abi, runner) as unknown as FitChainRewards;
  }
}
